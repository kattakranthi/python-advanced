'''
In pandas, the iloc indexer is used to select rows and columns by integer position. It allows you to select data based on its numerical position in a DataFrame. Here are some examples to illustrate the usage of iloc in Python:
'''

import pandas as pd

data = {
    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Emily'],
    'Age': [25, 30, 35, 40, 22],
    'City': ['New York', 'San Francisco', 'Los Angeles', 'Chicago', 'Boston']
}

df = pd.DataFrame(data)

#Selecting rows by integer position
# Select the first row
first_row = df.iloc[0]
print("First Row:\n", first_row)

# Select rows with index 1 and 3
specific_rows = df.iloc[[1, 3]]
print("Specific Rows:\n", specific_rows)

# Select rows 1 and 3, and columns 0 and 2
subset = df.iloc[[1, 3], [0, 2]]
print("Subset of Rows and Columns:\n", subset)

# Select rows 1 to 3 (exclusive), and columns 0 to 2 (exclusive)
sliced_data = df.iloc[1:3, 0:2]
print("Sliced Data:\n", sliced_data)

# Update the value in the first row, second column
df.iloc[0, 1] = 26
print("Modified DataFrame:\n", df)

